on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Azure CLI
        uses: Azure/setup-azure-cli@v1
        with:
          version: latest
      
      - name: Install Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Log in with Azure (Federated Credentials)
        if: ${{ env.AZURE_CLIENT_ID != '' }}
        run: |
          az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        shell: bash

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          echo $AZURE_CREDENTIALS | base64 --decode > "$HOME/azure-credentials.json"
          az login --service-principal --username $(jq -r .clientId < "$HOME/azure-credentials.json") --password $(jq -r .clientSecret < "$HOME/azure-credentials.json") --tenant $(jq -r .tenantId < "$HOME/azure-credentials.json")
        shell: bash

      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Cosmos DB
        run: |
          az cosmosdb create \
            --name cosmos-2hejwpgq2bmtg \
            --resource-group rg-p2p-mailconf-env \
            --kind MongoDB \
            --locations regionName=centralus failoverPriority=0 isZoneRedundant=False \
            --default-consistency-level Session \
            --enable-automatic-failover false \
            --enable-multiple-write-locations false \
            --disable-key-based-metadata-write-access true \
            --public-network-access Disabled \
            --capabilities EnableMongo
        env:
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
